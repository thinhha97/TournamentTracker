<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>