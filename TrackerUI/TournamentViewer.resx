<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>